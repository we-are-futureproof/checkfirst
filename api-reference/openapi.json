{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "AppController_postHello",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/users/{userId}": {
      "get": {
        "operationId": "UserController_getUserProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User Details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserDto"
                }
              }
            }
          }
        },
        "tags": [
          "Users"
        ]
      },
      "put": {
        "operationId": "UserController_updateUserProfile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/users/{userId}/password": {
      "put": {
        "operationId": "UserController_updateUserPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Users"
        ]
      }
    },
    "/api/v1/clients": {
      "post": {
        "operationId": "ClientController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Clients"
        ]
      },
      "get": {
        "operationId": "ClientController_findAll",
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/PageMetaDto"
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/GetClientDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/api/v1/clients/createCompanyName": {
      "post": {
        "operationId": "ClientController_createCompanyName",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompanyClientDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/api/v1/clients/{clientId}": {
      "put": {
        "operationId": "ClientController_updateClient",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientBodyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Clients"
        ]
      },
      "get": {
        "operationId": "ClientController_getClient",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/api/v1/clients/{clientId}/configurations/{key}": {
      "post": {
        "operationId": "ClientController_createClientConfiguration",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientConfigurationUpdateRequestDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/api/v1/clients/{clientId}/users": {
      "get": {
        "operationId": "ClientController_getClientUsers",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/PageMetaDto"
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/GetUserDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Clients"
        ]
      },
      "post": {
        "operationId": "ClientController_createClientUser",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveClientUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/api/v1/clients/{clientId}/users/{userId}": {
      "post": {
        "operationId": "ClientController_updateClientUser",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SaveClientUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Clients"
        ]
      },
      "delete": {
        "operationId": "ClientController_deleteClientUser",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Clients"
        ]
      }
    },
    "/api/v1/client-users": {
      "get": {
        "operationId": "ClientUserController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ClientUsers"
        ]
      },
      "post": {
        "operationId": "ClientUserController_createOne",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "ClientUsers"
        ]
      }
    },
    "/api/v1/hooks": {
      "get": {
        "operationId": "HookController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Hooks"
        ]
      },
      "post": {
        "operationId": "HookController_createOne",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateHookDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Hooks"
        ]
      }
    },
    "/api/v1/hooks/{hookId}": {
      "put": {
        "operationId": "HookController_updateOne",
        "parameters": [
          {
            "name": "hookId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOrUpdateHookDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Hooks"
        ]
      },
      "get": {
        "operationId": "HookController_findOne",
        "parameters": [
          {
            "name": "hookId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Hooks"
        ]
      },
      "delete": {
        "operationId": "HookController_deleteOne",
        "parameters": [
          {
            "name": "hookId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Hooks"
        ]
      }
    },
    "/api/v1/hooks/{hookId}/secret": {
      "put": {
        "operationId": "HookController_updateHookSecret",
        "parameters": [
          {
            "name": "hookId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Hooks"
        ]
      }
    },
    "/api/v1/et-file-manager/upload-url": {
      "post": {
        "operationId": "EtFileManagerController_createUploadUrl",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUploadUrRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Create upload url",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUploadUrlResponseDto"
                }
              }
            }
          }
        },
        "tags": [
          "et-file-manager"
        ]
      }
    },
    "/api/v1/et-file-manager/complete-upload": {
      "post": {
        "operationId": "EtFileManagerController_completeMultipartUpload",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompleteMultipartDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Complete multipart upload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CompleteMultipartDto"
                }
              }
            }
          }
        },
        "tags": [
          "et-file-manager"
        ]
      }
    },
    "/api/v1/clients/{clientId}/api-keys": {
      "post": {
        "operationId": "ClientApiKeysController_create",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApiKeyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreatedApiKeyDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clients API keys"
        ]
      },
      "get": {
        "operationId": "ClientApiKeysController_get",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApiKeyDto"
                }
              }
            }
          }
        },
        "tags": [
          "Clients API keys"
        ]
      }
    },
    "/api/v1/clients/{clientId}/api-keys/{id}": {
      "delete": {
        "operationId": "ClientApiKeysController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "clientId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted"
          }
        },
        "tags": [
          "Clients API keys"
        ]
      }
    },
    "/api/v1/hooks/{hookId}/requests": {
      "get": {
        "operationId": "HookRequestController_getHooksRequests",
        "parameters": [
          {
            "name": "hookId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "enum": [
                "ALL",
                "SUCCESS",
                "FAILED"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/PageMetaDto"
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/HookRequestsDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Hooks"
        ]
      },
      "post": {
        "operationId": "HookRequestController_createHooksRequests",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RetryHookRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "created"
          }
        },
        "tags": [
          "Hooks"
        ]
      }
    },
    "/api/v1/magic-links": {
      "post": {
        "operationId": "MagicLinkController_createMagicLink",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMagicLinkDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMagicLinkDto"
                }
              }
            }
          }
        },
        "tags": [
          "Magic Links"
        ]
      },
      "get": {
        "operationId": "MagicLinkController_getMagicLinks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GetMagicLinkRawDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Magic Links"
        ]
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserLoginInputDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Invalid credentials"
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/magic-link": {
      "post": {
        "operationId": "AuthController_magicLinkSignup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserMagicLinkSignupDto"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Invalid credentials"
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserSignUpDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/signup": {
      "post": {
        "operationId": "AuthController_signUp",
        "parameters": [
          {
            "name": "Accept-Language",
            "in": "header",
            "schema": {
              "enum": [
                "en",
                "pt"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserSignUpInputDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/resend-verification": {
      "post": {
        "operationId": "AuthController_resendVerification",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendVerificationDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/email-verification": {
      "post": {
        "operationId": "AuthController_emailVerification",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "operationId": "AuthController_getProfile",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/password/reset": {
      "post": {
        "operationId": "AuthController_resetPassword",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/refresh": {
      "put": {
        "operationId": "AuthController_refreshToken",
        "parameters": [],
        "responses": {
          "401": {
            "description": "Invalid refresh token"
          },
          "default": {
            "description": "Refresh token update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserLoginDto"
                }
              }
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/password/reset/{token}": {
      "put": {
        "operationId": "AuthController_updatePasswordWithToken",
        "parameters": [
          {
            "name": "token",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/auth/password/{userId}": {
      "put": {
        "operationId": "AuthController_updatePassword",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/api/v1/tokens": {
      "get": {
        "operationId": "TokenController_findAll",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseTokenDto"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Tokens"
        ]
      },
      "post": {
        "operationId": "TokenController_createOne",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateOneTimeTokenBase"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Tokens"
        ]
      }
    },
    "/api/v1/tokens/{tokenId}": {
      "put": {
        "operationId": "TokenController_updateOne",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateOrUpdateOneTimeTokenBase"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Tokens"
        ]
      },
      "get": {
        "operationId": "TokenController_findOne",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Tokens"
        ]
      }
    },
    "/api/v1/tokens/{tokenId}/tokenInstructionEmail": {
      "post": {
        "operationId": "TokenController_SendTokenByEmail",
        "parameters": [
          {
            "name": "tokenId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenInstructionEmailDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Tokens"
        ]
      }
    },
    "/api/v1/inspectors": {
      "get": {
        "operationId": "InspectorController_getInspectors",
        "parameters": [
          {
            "name": "competenciesIds",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "roleIds",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "countries",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "types",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "customerIds",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "names",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDto"
                }
              }
            }
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      },
      "post": {
        "operationId": "InspectorController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInspectorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      }
    },
    "/api/v1/inspectors/list": {
      "get": {
        "operationId": "InspectorController_findAll",
        "summary": "",
        "deprecated": true,
        "description": "Deprecated: Use GET /inspectors instead. This endpoint will be removed in future versions.",
        "parameters": [
          {
            "name": "competenciesIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Inspectors - Unavailability",
          "deprecated"
        ]
      }
    },
    "/api/v1/inspectors/countries": {
      "get": {
        "operationId": "InspectorController_getInspectorsCountries",
        "summary": "Get distinct countries for inspectors",
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "List of distinct countries",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDto"
                }
              }
            }
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      }
    },
    "/api/v1/inspectors/names": {
      "get": {
        "operationId": "InspectorController_getInspectorsNames",
        "summary": "Get names and ids for inspectors",
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "List of ids and names",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDto"
                }
              }
            }
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      }
    },
    "/api/v1/inspectors/unassigned": {
      "get": {
        "operationId": "InspectorController_getUnassignedInspectors",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      }
    },
    "/api/v1/inspectors/{id}": {
      "get": {
        "operationId": "InspectorController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      },
      "delete": {
        "operationId": "InspectorController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      },
      "put": {
        "operationId": "InspectorController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInspectorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      }
    },
    "/api/v1/inspectors/team/{teamId}": {
      "get": {
        "operationId": "InspectorController_getByTeamId",
        "parameters": [
          {
            "name": "teamId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      }
    },
    "/api/v1/inspectors/region/{region}": {
      "get": {
        "operationId": "InspectorController_getByRegion",
        "parameters": [
          {
            "name": "region",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      }
    },
    "/api/v1/inspectors/activity/{activityId}/suitable-inspectors": {
      "get": {
        "operationId": "InspectorController_getSuitableInspectors",
        "parameters": [
          {
            "name": "activityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "targetMonth",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      }
    },
    "/api/v1/inspectors/{id}/unavailability": {
      "get": {
        "operationId": "InspectorController_getUnavailabilityPeriods",
        "summary": "Get all unavailability periods for an inspector",
        "description": "Retrieves a paginated list of unavailability periods for a specific inspector. These periods are used in the allocation algorithm to prevent scheduling appointments during the inspector's unavailability.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of unavailability periods",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDto"
                }
              }
            }
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      },
      "post": {
        "operationId": "InspectorController_createUnavailabilityPeriod",
        "summary": "Create a new unavailability period for an inspector",
        "description": "Creates a new unavailability period for a specific inspector. This period is used in the allocation algorithm to prevent scheduling appointments during the specified time.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Inspector ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnavailabilityPeriodDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The created unavailability period",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnavailabilityPeriodDto"
                }
              }
            }
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      }
    },
    "/api/v1/inspectors/{id}/unavailability/{unavailabilityId}": {
      "put": {
        "operationId": "InspectorController_updateUnavailabilityPeriod",
        "summary": "Update an existing unavailability period for an inspector",
        "description": "Modifies an existing unavailability period for a specific inspector. Updates start date, end date, notes, and type. This period is used in the allocation algorithm to prevent scheduling appointments during the updated time.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Inspector ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "unavailabilityId",
            "required": true,
            "in": "path",
            "description": "Unavailability period ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnavailabilityPeriodDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated unavailability period",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnavailabilityPeriodDto"
                }
              }
            }
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      },
      "delete": {
        "operationId": "InspectorController_deleteUnavailabilityPeriod",
        "summary": "Delete an unavailability period for an inspector",
        "description": "Removes an unavailability period for a specific inspector. Requires the unavailability period ID. This period will no longer be used in the allocation algorithm to block appointments during the specified time.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Inspector ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "unavailabilityId",
            "required": true,
            "in": "path",
            "description": "Unavailability period ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Unavailability period deleted"
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      }
    },
    "/api/v1/inspectors/{id}/invite": {
      "post": {
        "operationId": "InspectorController_sendInvitation",
        "summary": "Send invitation email to an inspector",
        "description": "Sends an invitation email to a specific inspector with their account details",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation email sent successfully"
          },
          "400": {
            "description": "Invalid request or inspector has no user account"
          },
          "404": {
            "description": "Inspector not found"
          }
        },
        "tags": [
          "Inspectors - Unavailability"
        ]
      }
    },
    "/api/v1/teams/list": {
      "get": {
        "operationId": "TeamController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/teams/{id}": {
      "get": {
        "operationId": "TeamController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "TeamController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "TeamController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/teams": {
      "post": {
        "operationId": "TeamController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTeamDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/teams/region/{region}": {
      "get": {
        "operationId": "TeamController_getByRegion",
        "parameters": [
          {
            "name": "region",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activities": {
      "get": {
        "operationId": "ActivityController_findAll",
        "summary": "Get all activities with filters",
        "parameters": [
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "description": "IDs of the activities (comma separated)",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "statuses",
            "required": false,
            "in": "query",
            "description": "Statuses of the activities (comma separated)",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ActivityStatus"
              }
            }
          },
          {
            "name": "standard-ids",
            "required": false,
            "in": "query",
            "description": "Standard IDs of the activities (comma separated)",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "competencies-ids",
            "required": false,
            "in": "query",
            "description": "Competencies IDs of the activities (comma separated)",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "regions",
            "required": false,
            "in": "query",
            "description": "Regions of the activities (comma separated)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "target-months",
            "required": false,
            "in": "query",
            "description": "Target months of the activities (comma separated)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "due-date",
            "required": false,
            "in": "query",
            "description": "Due date of the activities (YYYY-MM-DD)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "types",
            "required": false,
            "in": "query",
            "description": "Types of the activities (comma separated)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "customer-ids",
            "required": false,
            "in": "query",
            "description": "Customer IDs of the activities (comma separated)",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "priorities",
            "required": false,
            "in": "query",
            "description": "Priorities of the activities (comma separated)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "project-references",
            "required": false,
            "in": "query",
            "description": "Project references of the activities (comma separated)",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "duration-days",
            "required": false,
            "in": "query",
            "description": "Duration days of the activities",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "is-allocated",
            "required": false,
            "in": "query",
            "description": "Is allocated of the activities",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "solution-ids",
            "required": false,
            "in": "query",
            "description": "Solution IDs (comma separated)",
            "schema": {
              "type": "array",
              "items": {
                "type": "number"
              }
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDto"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "ActivityController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateActivityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activities/list": {
      "get": {
        "operationId": "ActivityController_findAllOld",
        "summary": "",
        "deprecated": true,
        "description": "Deprecated: Use GET /activities instead. This endpoint will be removed in future versions.",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "standardIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "competenciesIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetMonth",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dueDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectReference",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "durationDays",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "deprecated"
        ]
      }
    },
    "/api/v1/activities/list-skip": {
      "get": {
        "operationId": "ActivityController_findAllWithSkip",
        "parameters": [
          {
            "name": "status",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skip",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "standardIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "competenciesIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "targetMonth",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dueDate",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "customerIds",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "priority",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "projectReference",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "durationDays",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activities/{id}": {
      "get": {
        "operationId": "ActivityController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "ActivityController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateActivityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "ActivityController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "ActivityController_patch",
        "summary": "Partially update an existing activity",
        "description": "Partially updates the details of an activity by its ID. Only the fields provided in the request body will be updated.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "The data to update the activity with. Only fields that need to be updated should be included.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchActivityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The activity has been successfully updated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data."
          },
          "403": {
            "description": "Forbidden: User does not have permission to update this activity."
          },
          "404": {
            "description": "Activity not found."
          }
        }
      }
    },
    "/api/v1/activities/{id}/allocation": {
      "delete": {
        "operationId": "ActivityController_removeActivityAppointments",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activities/project/{projectId}": {
      "get": {
        "operationId": "ActivityController_getByProjectId",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activities/site/{siteId}": {
      "get": {
        "operationId": "ActivityController_getBySiteId",
        "parameters": [
          {
            "name": "siteId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activities/type/visit": {
      "get": {
        "operationId": "ActivityController_getVisitServices",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activities/allocate": {
      "post": {
        "operationId": "ActivityController_allocateVisits",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activities/{serviceId}/inspectors": {
      "put": {
        "operationId": "ActivityController_allocateSingleService",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activities/allocate-specific/{planboxId}": {
      "post": {
        "operationId": "ActivityController_allocateSpecificServices",
        "parameters": [
          {
            "name": "planboxId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activities/inspector/{inspectorId}": {
      "get": {
        "operationId": "ActivityController_getActivitiesByInspectorId",
        "summary": "Get activities assigned to an inspector",
        "description": "Retrieves all activities assigned to a specific inspector by their ID with complete data including site, standard, customer, and competencies information.",
        "parameters": [
          {
            "name": "inspectorId",
            "required": true,
            "in": "path",
            "description": "Inspector ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of activities assigned to the inspector with complete data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDto"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden: User does not have permission to view this inspector."
          },
          "404": {
            "description": "Inspector not found."
          }
        }
      }
    },
    "/api/v1/planboxes": {
      "get": {
        "operationId": "PlanboxController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "PlanboxController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePlanboxDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/planboxes/latest": {
      "get": {
        "operationId": "PlanboxController_getLatestPlanbox",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/planboxes/{id}": {
      "get": {
        "operationId": "PlanboxController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "PlanboxController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePlanboxDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "PlanboxController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/planboxes/{id}/activities/{activityId}": {
      "delete": {
        "operationId": "PlanboxController_removeActivity",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "activityId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/planboxes/{id}/progress": {
      "get": {
        "operationId": "PlanboxController_getProgress",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/holidays": {
      "get": {
        "operationId": "HolidaysController_findAll",
        "summary": "Get all holidays",
        "description": "Retrieves a paginated list of holidays. Supports search and filtering by country, region, and type. These holidays are used in the allocation algorithm to prevent scheduling appointments on national holidays.",
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of holidays",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDto"
                }
              }
            }
          }
        },
        "tags": [
          "Holidays"
        ]
      },
      "post": {
        "operationId": "HolidaysController_create",
        "summary": "Create a new holiday",
        "description": "Adds a new holiday. Requires name, date, and country code. This holiday will be used in the allocation algorithm to prevent scheduling appointments on the specified date.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHolidayDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The created holiday",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Holidays"
        ]
      }
    },
    "/api/v1/holidays/{id}": {
      "get": {
        "operationId": "HolidaysController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Holidays"
        ]
      },
      "put": {
        "operationId": "HolidaysController_update",
        "summary": "Update an existing holiday",
        "description": "Modifies an existing holiday. Updates name, date, country code, and other optional fields. This holiday is used in the allocation algorithm to prevent scheduling appointments on the updated date.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Holiday ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HolidayDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated holiday",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HolidayDTO"
                }
              }
            }
          }
        },
        "tags": [
          "Holidays"
        ]
      },
      "delete": {
        "operationId": "HolidaysController_remove",
        "summary": "Delete a holiday",
        "description": "Removes a holiday. Requires the holiday ID. This holiday will no longer be used in the allocation algorithm to prevent scheduling appointments on the specified date.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Holiday ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Holiday deleted"
          }
        },
        "tags": [
          "Holidays"
        ]
      }
    },
    "/api/v1/activity-inspectors/{activityId}": {
      "post": {
        "operationId": "ActivityInspectorController_createActivityInspectors",
        "summary": "Assign multiple inspectors to an activity",
        "parameters": [
          {
            "name": "activityId",
            "required": true,
            "in": "path",
            "description": "ID of the activity to assign inspectors to",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Inspectors have been successfully assigned to the activity",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActivityInspector"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "404": {
            "description": "Activity or one of the inspectors not found"
          }
        },
        "tags": [
          "Activity Inspectors"
        ]
      }
    },
    "/api/v1/clients-activities": {
      "get": {
        "operationId": "ClientActivityController_findAllClientsActivity",
        "parameters": [
          {
            "name": "clientId",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "action",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "module",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "meta": {
                          "$ref": "#/components/schemas/PageMetaDto"
                        }
                      }
                    },
                    {
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/GetClientActivityDto"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Clients-Activity"
        ]
      }
    },
    "/api/v1/competencies/list": {
      "get": {
        "operationId": "CompetencyController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/competencies/{id}": {
      "get": {
        "operationId": "CompetencyController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "CompetencyController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompetencyDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "CompetencyController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/competencies": {
      "post": {
        "operationId": "CompetencyController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompetencyDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activity-template/list": {
      "get": {
        "operationId": "ActivityTemplateController_findAll",
        "parameters": [
          {
            "name": "standard_template_id",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activity-template/{id}": {
      "get": {
        "operationId": "ActivityTemplateController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "ActivityTemplateController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateActivityTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "ActivityTemplateController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activity-template": {
      "post": {
        "operationId": "ActivityTemplateController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateServiceTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/activity-template/scheme/{schemeId}": {
      "get": {
        "operationId": "ActivityTemplateController_getBySchemeId",
        "parameters": [
          {
            "name": "schemeId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/authorizations/list": {
      "get": {
        "operationId": "AuthorizationController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/authorizations/{id}": {
      "get": {
        "operationId": "AuthorizationController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "AuthorizationController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "AuthorizationController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAuthorizationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/authorizations": {
      "post": {
        "operationId": "AuthorizationController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAuthorizationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/authorizations/inspector/{inspectorId}": {
      "get": {
        "operationId": "AuthorizationController_getByInspectorId",
        "parameters": [
          {
            "name": "inspectorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/authorizations/competency/{competencyId}": {
      "get": {
        "operationId": "AuthorizationController_getByCompetencyId",
        "parameters": [
          {
            "name": "competencyId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/created-competencies-categories": {
      "post": {
        "operationId": "CreatedCompetenciesCategoriesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCompetencyCategoriesDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/created-competencies-categories/{id}": {
      "put": {
        "operationId": "CreatedCompetenciesCategoriesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCompetencyCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/standard-template/list": {
      "get": {
        "operationId": "StandardTemplateController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/standard-template/{id}": {
      "get": {
        "operationId": "StandardTemplateController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "StandardTemplateController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateStandardTemplateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "StandardTemplateController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/standard-template": {
      "post": {
        "operationId": "StandardTemplateController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateStandardTemplateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/standard-template/category/{categoryId}": {
      "get": {
        "operationId": "StandardTemplateController_getBySchemeCategoryId",
        "parameters": [
          {
            "name": "categoryId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/standard-category": {
      "get": {
        "operationId": "StandardCategoryController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "StandardCategoryController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateStandardCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/standard-category/list": {
      "get": {
        "operationId": "StandardCategoryController_findAllList",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/standard-category/{id}": {
      "get": {
        "operationId": "StandardCategoryController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "StandardCategoryController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "StandardCategoryController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStandardCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/appointments/list": {
      "get": {
        "operationId": "AppointmentController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/appointments/{id}": {
      "get": {
        "operationId": "AppointmentController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "AppointmentController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "AppointmentController_update",
        "summary": "Update an appointment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Appointment ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAppointmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Appointment updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/appointments": {
      "post": {
        "operationId": "AppointmentController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAppointmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/appointments/service/{serviceId}": {
      "get": {
        "operationId": "AppointmentController_getByServiceId",
        "parameters": [
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/appointments/inspector/{inspectorId}": {
      "get": {
        "operationId": "AppointmentController_getByInspectorId",
        "parameters": [
          {
            "name": "inspectorId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/appointments/upcoming": {
      "get": {
        "operationId": "AppointmentController_getUpcomingAppointments",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/appointments/approve-and-create": {
      "post": {
        "operationId": "AppointmentController_approveAndCreateAppointments",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ApproveAndCreateAppointmentsDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/appointments/notify-appointment": {
      "post": {
        "operationId": "AppointmentController_notifyAppointment",
        "summary": "Send notification email for an appointment",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyAppointmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification sent successfully"
          }
        }
      }
    },
    "/api/v1/appointments/notify-activity": {
      "post": {
        "operationId": "AppointmentController_notifyActivity",
        "summary": "Send notification email for all appointments of an activity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyActivityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification sent successfully"
          }
        }
      }
    },
    "/api/v1/appointments/notify-inspector": {
      "post": {
        "operationId": "AppointmentController_notifyInspector",
        "summary": "Send notification email to inspectors for an activity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotifyActivityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Inspector notification sent successfully"
          }
        }
      }
    },
    "/api/v1/attachments/list": {
      "get": {
        "operationId": "AttachmentController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/attachments/{id}": {
      "get": {
        "operationId": "AttachmentController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "AttachmentController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "AttachmentController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttachmentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/attachments": {
      "post": {
        "operationId": "AttachmentController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAttachmentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/attachments/project/{projectId}": {
      "get": {
        "operationId": "AttachmentController_getByProjectId",
        "parameters": [
          {
            "name": "projectId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/customers/list": {
      "get": {
        "operationId": "CustomerController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/customers/{id}": {
      "get": {
        "operationId": "CustomerController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "CustomerController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "CustomerController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/customers": {
      "post": {
        "operationId": "CustomerController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCustomerDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/customers/region/{region}": {
      "get": {
        "operationId": "CustomerController_getByRegion",
        "parameters": [
          {
            "name": "region",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/customers/country/{country}": {
      "get": {
        "operationId": "CustomerController_getByCountry",
        "parameters": [
          {
            "name": "country",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/projects/list": {
      "get": {
        "operationId": "ProjectController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/projects/{id}": {
      "get": {
        "operationId": "ProjectController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "ProjectController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "ProjectController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/projects": {
      "post": {
        "operationId": "ProjectController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateProjectDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/projects/customer/{customerId}": {
      "get": {
        "operationId": "ProjectController_getByCustomerId",
        "parameters": [
          {
            "name": "customerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/projects/team/{teamId}": {
      "get": {
        "operationId": "ProjectController_getByTeamId",
        "parameters": [
          {
            "name": "teamId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/sites/list": {
      "get": {
        "operationId": "SiteController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/sites/{id}": {
      "get": {
        "operationId": "SiteController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "SiteController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSiteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "SiteController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/sites": {
      "post": {
        "operationId": "SiteController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSiteDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/sites/customer/{customerId}": {
      "get": {
        "operationId": "SiteController_getByCustomerId",
        "parameters": [
          {
            "name": "customerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/sites/region/{region}": {
      "get": {
        "operationId": "SiteController_getByRegion",
        "parameters": [
          {
            "name": "region",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/personnel-preferrence/list": {
      "get": {
        "operationId": "PersonnelPreferrenceController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/personnel-preferrence/{id}": {
      "get": {
        "operationId": "PersonnelPreferrenceController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "PersonnelPreferrenceController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePreferrenceDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "PersonnelPreferrenceController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/personnel-preferrence": {
      "post": {
        "operationId": "PersonnelPreferrenceController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePreferrenceDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/recurring-schedules/list": {
      "get": {
        "operationId": "RecurringScheduleController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/recurring-schedules/{id}": {
      "get": {
        "operationId": "RecurringScheduleController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "RecurringScheduleController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "RecurringScheduleController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecurringScheduleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/recurring-schedules": {
      "post": {
        "operationId": "RecurringScheduleController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRecurringScheduleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/recurring-schedules/site/{siteId}": {
      "get": {
        "operationId": "RecurringScheduleController_getBySiteId",
        "parameters": [
          {
            "name": "siteId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/recurring-schedules/customer/{customerId}": {
      "get": {
        "operationId": "RecurringScheduleController_getByCustomerId",
        "parameters": [
          {
            "name": "customerId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/competency-categories": {
      "get": {
        "operationId": "CompetencyCategoriesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "CompetencyCategoriesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/competency-categories/{id}": {
      "get": {
        "operationId": "CompetencyCategoriesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "CompetencyCategoriesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCategoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "CompetencyCategoriesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/solutions": {
      "get": {
        "operationId": "SolutionController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/solutions/{id}": {
      "get": {
        "operationId": "SolutionController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "SolutionController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSolutionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "SolutionController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/solutions/{planboxId}": {
      "post": {
        "operationId": "SolutionController_create",
        "parameters": [
          {
            "name": "planboxId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSolutionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/solutions/planbox/{planboxId}": {
      "get": {
        "operationId": "SolutionController_findByPlanboxId",
        "parameters": [
          {
            "name": "planboxId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/solutions/{id}/allocated-services/{serviceId}": {
      "put": {
        "operationId": "SolutionController_updateAllocatedInspectors",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAllocatedService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "SolutionController_unallocateService",
        "summary": "Unallocate a service from a solution",
        "description": "This endpoint unallocates a service from a solution. It requires the solution ID and the service ID to be unallocated.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the solution",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "description": "The ID of the service to be unallocated",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Service unallocated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Client does not have access to this solution"
          },
          "404": {
            "description": "Solution or service not found"
          }
        }
      }
    },
    "/api/v1/solutions/{id}/unallocated-services/{serviceId}": {
      "put": {
        "operationId": "SolutionController_updateUnallocatedInspectors",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "serviceId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAllocatedService"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/solutions/{id}/activities": {
      "get": {
        "operationId": "SolutionController_getSolutionActivities",
        "summary": "[DEPRECATED] Get activities for a solution",
        "deprecated": true,
        "description": "DEPRECATED: Please use GET /activities?solution-ids={solutionId} instead. This endpoint will be removed in a future version.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the solution",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "is-allocated",
            "required": false,
            "in": "query",
            "description": "Filter by allocation status",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "description": "Sort order direction",
            "schema": {
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (1-based)",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "Field to order by",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved activities for the solution",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Client does not have access to this solution"
          },
          "404": {
            "description": "Solution not found"
          }
        }
      }
    },
    "/api/v1/regions/list": {
      "get": {
        "operationId": "RegionsController_findAll",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/regions/{id}": {
      "get": {
        "operationId": "RegionsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "RegionsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRegionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "RegionsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/regions": {
      "post": {
        "operationId": "RegionsController_create",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRegionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/member-roles/list": {
      "get": {
        "operationId": "MemberRolesController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/member-roles/{id}": {
      "get": {
        "operationId": "MemberRolesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "MemberRolesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberRoleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "MemberRolesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/member-roles": {
      "post": {
        "operationId": "MemberRolesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMemberRoleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/client-types/list": {
      "get": {
        "operationId": "ClientTypesController_findAll",
        "parameters": [
          {
            "name": "clientId",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/client-types/{id}": {
      "get": {
        "operationId": "ClientTypesController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "ClientTypesController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientTypeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "ClientTypesController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/client-types": {
      "post": {
        "operationId": "ClientTypesController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/file-import": {
      "get": {
        "operationId": "FileImportController_findAll",
        "summary": "Get all file imports for the client",
        "parameters": [
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDto"
                }
              }
            }
          }
        },
        "tags": [
          "File Import"
        ]
      }
    },
    "/api/v1/file-import/{id}": {
      "get": {
        "operationId": "FileImportController_findOne",
        "summary": "Get a file import by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileImport"
                }
              }
            }
          }
        },
        "tags": [
          "File Import"
        ]
      },
      "delete": {
        "operationId": "FileImportController_remove",
        "summary": "Delete a file import",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "File Import"
        ]
      }
    },
    "/api/v1/file-import/validate": {
      "post": {
        "operationId": "FileImportController_validateCsv",
        "summary": "Validate a CSV file",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "INSPECTORS",
                      "PROJECTS",
                      "SCHEMES"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "File Import"
        ]
      }
    },
    "/api/v1/file-import/upload/inspectors": {
      "post": {
        "operationId": "FileImportController_uploadInspectorsCsv",
        "summary": "Upload and process inspectors CSV file",
        "parameters": [
          {
            "name": "uploadedBy",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "uploaded_by": {
                    "type": "string"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "File Import"
        ]
      }
    },
    "/api/v1/file-import/upload/projects": {
      "post": {
        "operationId": "FileImportController_uploadProjectsCsv",
        "summary": "Upload and process projects CSV file",
        "parameters": [
          {
            "name": "uploadedBy",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "uploaded_by": {
                    "type": "string"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "File Import"
        ]
      }
    },
    "/api/v1/file-import/upload/schemes": {
      "post": {
        "operationId": "FileImportController_uploadSchemesCsv",
        "summary": "Upload and process schemes/standard templates CSV file",
        "parameters": [
          {
            "name": "uploadedBy",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "uploaded_by": {
                    "type": "string"
                  }
                },
                "required": [
                  "file"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "File Import"
        ]
      }
    },
    "/api/v1/file-import/{id}/status": {
      "get": {
        "operationId": "FileImportController_getImportStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the status of a file import",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileImportStatusDto"
                }
              }
            }
          }
        },
        "tags": [
          "File Import"
        ]
      }
    },
    "/api/v1/file-import/template/{type}": {
      "get": {
        "operationId": "FileImportController_getTemplate",
        "summary": "Get a template CSV file for a specific import type",
        "parameters": [
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "File Import"
        ]
      }
    },
    "/api/v1/file-import/import": {
      "post": {
        "operationId": "FileImportController_importCsv",
        "summary": "Upload and process any CSV file",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "INSPECTORS",
                      "PROJECTS",
                      "SCHEMES"
                    ]
                  },
                  "uploaded_by": {
                    "type": "string"
                  }
                },
                "required": [
                  "file",
                  "type"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "File Import"
        ]
      }
    },
    "/api/v1/reports/travel": {
      "get": {
        "operationId": "ReportsController_getTravel",
        "summary": "Retrieve travel data for a specific client and month",
        "parameters": [
          {
            "name": "startMonth",
            "required": true,
            "in": "query",
            "description": "The start month for which travel data is requested",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endMonth",
            "required": true,
            "in": "query",
            "description": "The end month for which travel data is requested",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          },
          {
            "name": "clientId",
            "required": true,
            "in": "query",
            "description": "The ID of the client",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Travel data retrieved successfully."
          },
          "400": {
            "description": "Invalid input data."
          }
        }
      }
    },
    "/api/v1/reports/travel/export": {
      "get": {
        "operationId": "ReportsController_exportTravel",
        "summary": "Export travel data for a specific client and month",
        "parameters": [
          {
            "name": "startMonth",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endMonth",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/reports/compliance": {
      "get": {
        "operationId": "ReportsController_getCompliance",
        "summary": "Retrieve compliance data for a specific client and month",
        "parameters": [
          {
            "name": "startMonth",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endMonth",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "default": "ASC",
              "enum": [
                "ASC",
                "DESC"
              ],
              "type": "string"
            }
          },
          {
            "name": "sortField",
            "required": false,
            "in": "query",
            "deprecated": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortOptions",
            "required": false,
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "search",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 50,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/reports/compliance/export": {
      "get": {
        "operationId": "ReportsController_exportCompliance",
        "summary": "Export compliance data for a specific client and month",
        "parameters": [
          {
            "name": "startMonth",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "endMonth",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/reports/utilization": {
      "get": {
        "operationId": "ReportsController_getUtilization",
        "summary": "Retrieve utilization data",
        "parameters": [
          {
            "name": "groupBy",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/reports/serviceLevel": {
      "get": {
        "operationId": "ReportsController_getServiceLevel",
        "summary": "Retrieve service level data",
        "parameters": [
          {
            "name": "groupBy",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/v1/reports/activity": {
      "get": {
        "operationId": "ReportsController_getScheduledActivitiesGroupedByStatus",
        "summary": "Retrieve number of activities grouped",
        "parameters": [
          {
            "name": "groupBy",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "info": {
    "title": "Checkfirst API documentation",
    "description": "API documentation",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "GetUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "imageURL": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "imageURL",
          "email"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email"
        ]
      },
      "UpdateUserPasswordDto": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "oldPassword",
          "password"
        ]
      },
      "PageMetaDto": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number"
          },
          "take": {
            "type": "number"
          },
          "itemCount": {
            "type": "number"
          },
          "pageCount": {
            "type": "number"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        },
        "required": [
          "page",
          "take",
          "itemCount",
          "pageCount",
          "hasPreviousPage",
          "hasNextPage"
        ]
      },
      "GetClientDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "imageURL": {
            "type": "string"
          },
          "users": {
            "$ref": "#/components/schemas/GetUserDto"
          }
        },
        "required": [
          "id",
          "name",
          "imageURL",
          "users"
        ]
      },
      "CreateClientDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "userId": {
            "type": "number"
          },
          "password": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "imageURL": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "userId",
          "email",
          "imageURL"
        ]
      },
      "CreateCompanyClientDto": {
        "type": "object",
        "properties": {
          "createCompanyName": {
            "type": "string"
          },
          "userId": {
            "type": "number"
          }
        },
        "required": [
          "createCompanyName",
          "userId"
        ]
      },
      "UpdateClientBodyDto": {
        "type": "object",
        "properties": {
          "imageURL": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "isDeactivated": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "isDeactivated"
        ]
      },
      "ClientConfigurationUpdateRequestDTO": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "required": [
          "value"
        ]
      },
      "SaveClientUserDto": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "enum": [
              "admin",
              "user",
              "client",
              "client_user",
              "ghost",
              "client_contributor",
              "client_manager",
              "inspector"
            ]
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          }
        },
        "required": [
          "role",
          "name",
          "email"
        ]
      },
      "CreateOrUpdateHookDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "url": {
            "type": "string"
          },
          "secret": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "url",
          "type"
        ]
      },
      "CreateUploadUrRequestDto": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "enum": [
              "CLIENTS"
            ]
          },
          "fileExtension": {
            "type": "string"
          },
          "parts": {
            "type": "number"
          }
        },
        "required": [
          "domain"
        ]
      },
      "CreateUploadUrlResponseDto": {
        "type": "object",
        "properties": {
          "uploadUrl": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          },
          "uploadPartsUrls": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CompleteMultipartDto": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "enum": [
              "CLIENTS"
            ]
          },
          "fileExtension": {
            "type": "string"
          },
          "uploadId": {
            "type": "string"
          },
          "parts": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "domain",
          "parts"
        ]
      },
      "CreateApiKeyDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "CreatedApiKeyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string"
          },
          "apiKey": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "GetApiKeyDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "RetryHookRequestDto": {
        "type": "object",
        "properties": {
          "hookRequestId": {
            "type": "number"
          }
        },
        "required": [
          "hookRequestId"
        ]
      },
      "CreateMagicLinkDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number"
          }
        },
        "required": [
          "userId"
        ]
      },
      "GetMagicLinkDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "link": {
            "type": "string"
          },
          "isUsed": {
            "type": "boolean"
          },
          "expiresAt": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "link",
          "isUsed",
          "expiresAt"
        ]
      },
      "GetMagicLinkRawDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "link": {
            "type": "string"
          },
          "isUsed": {
            "type": "boolean"
          },
          "expiresAt": {
            "type": "string"
          },
          "userId": {
            "type": "number"
          },
          "userName": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "link",
          "isUsed",
          "expiresAt",
          "userId",
          "userName"
        ]
      },
      "UserLoginInputDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "UserLoginDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "user": {
            "type": "object"
          }
        },
        "required": [
          "accessToken",
          "refreshToken",
          "user"
        ]
      },
      "UserMagicLinkSignupDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          }
        },
        "required": [
          "token"
        ]
      },
      "UserSignUpDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          },
          "user": {
            "type": "object"
          }
        },
        "required": [
          "accessToken",
          "refreshToken",
          "user"
        ]
      },
      "UserSignUpInputDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "oauthToken": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email",
          "password",
          "oauthToken"
        ]
      },
      "ResendVerificationDTO": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      },
      "UpdatePasswordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          },
          "oldPassword": {
            "type": "string"
          }
        },
        "required": [
          "password",
          "confirmPassword",
          "oldPassword"
        ]
      },
      "UsersTokenDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          }
        }
      },
      "ChecklistTokenDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          }
        }
      },
      "ReportTokenDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          }
        }
      },
      "ResponseTokenDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "token": {
            "type": "string"
          },
          "isUsed": {
            "type": "boolean"
          },
          "type": {
            "type": "string"
          },
          "userToken": {
            "$ref": "#/components/schemas/UsersTokenDto"
          },
          "checklistToken": {
            "$ref": "#/components/schemas/ChecklistTokenDto"
          },
          "reportToken": {
            "$ref": "#/components/schemas/ReportTokenDto"
          }
        },
        "required": [
          "id",
          "token",
          "isUsed",
          "type",
          "userToken",
          "checklistToken",
          "reportToken"
        ]
      },
      "CreateOrUpdateOneTimeTokenBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "expirationMinutes": {
            "type": "number"
          },
          "is_used": {
            "type": "boolean"
          },
          "token": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "checklistId": {
            "type": "number"
          },
          "unitId": {
            "type": "number"
          },
          "userId": {
            "type": "number"
          },
          "reportId": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "expirationMinutes",
          "is_used",
          "token",
          "type"
        ]
      },
      "TokenInstructionEmailDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "subject",
          "message"
        ]
      },
      "PageDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "array"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PageMetaDto"
          }
        },
        "required": [
          "data",
          "meta"
        ]
      },
      "CreateInspectorDto": {
        "type": "object",
        "properties": {}
      },
      "UnavailabilityPeriodDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The ID of the unavailability period"
          },
          "startDate": {
            "type": "string",
            "description": "The start date of the unavailability period",
            "example": "2023-01-01T00:00:00.000Z"
          },
          "endDate": {
            "type": "string",
            "description": "The end date of the unavailability period",
            "example": "2023-01-02T00:00:00.000Z"
          },
          "notes": {
            "type": "string",
            "description": "Additional notes for the unavailability period"
          },
          "type": {
            "type": "string",
            "enum": [
              "HOLIDAY",
              "SICK_LEAVE",
              "OTHER"
            ],
            "description": "The type of unavailability"
          },
          "duration": {
            "type": "number",
            "description": "The duration of the unavailability period in hours"
          }
        },
        "required": [
          "startDate",
          "endDate",
          "type"
        ]
      },
      "CreateTeamDto": {
        "type": "object",
        "properties": {}
      },
      "ActivityStatus": {
        "type": "array",
        "enum": [
          "open",
          "allocated_proposed",
          "allocated_confirmed",
          "scheduled_proposed",
          "scheduled_confirmed",
          "client_confirmed",
          "cancelled"
        ]
      },
      "CreateActivityDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateActivityDto": {
        "type": "object",
        "properties": {}
      },
      "PatchActivityDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "open",
              "allocated_proposed",
              "allocated_confirmed",
              "scheduled_proposed",
              "scheduled_confirmed",
              "client_confirmed",
              "cancelled"
            ],
            "description": "Current status of the activity. Possible values:\n    - cancelled: Activity has been cancelled and will not be performed\n    - open: New activity that hasn't been allocated yet\n    - allocated_proposed: Activity has been allocated to inspector(s) but not yet scheduled\n    - allocated_confirmed: Activity has been allocated to inspector(s) and scheduled\n    - scheduled_proposed: Activity has been scheduled with specific date/time\n    - scheduled_confirmed: Activity has been scheduled with specific date/time\n    - client_confirmed: Activity has been confirmed by the client"
          },
          "type": {
            "type": "string",
            "enum": [
              "Visit",
              "Desk Service"
            ]
          },
          "scope": {
            "type": "string"
          },
          "dueDate": {
            "type": "string"
          },
          "targetDate": {
            "type": "string"
          },
          "priority": {
            "type": "number"
          },
          "duration": {
            "type": "number"
          },
          "region": {
            "type": "string"
          },
          "competencyIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "name",
          "status",
          "type"
        ]
      },
      "SiteDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "zipCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "location": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "address",
          "city",
          "region",
          "zipCode",
          "country",
          "countryCode",
          "location"
        ]
      },
      "InspectorDTO": {
        "type": "object",
        "properties": {}
      },
      "CompetencyDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "date"
        ]
      },
      "CustomerDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "sites": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SiteDTO"
            }
          }
        },
        "required": [
          "id",
          "name",
          "region",
          "country",
          "sites"
        ]
      },
      "ProjectDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "dueDate": {
            "format": "date-time",
            "type": "string"
          },
          "orderReference": {
            "type": "string"
          },
          "priority": {
            "type": "string",
            "enum": [
              "NORMAL",
              "HIGH",
              "LOW"
            ]
          },
          "inspector": {
            "type": "object"
          },
          "team": {
            "type": "object"
          },
          "customer": {
            "$ref": "#/components/schemas/CustomerDTO"
          }
        },
        "required": [
          "id",
          "name",
          "dueDate",
          "orderReference",
          "priority"
        ]
      },
      "StandardDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "periodicity": {
            "type": "number"
          },
          "periodicityType": {
            "type": "string",
            "enum": [
              "YEAR",
              "MONTH",
              "DAY"
            ]
          },
          "rotationAfter": {
            "type": "number"
          },
          "rotationAfterType": {
            "type": "string",
            "enum": [
              "YEAR",
              "MONTH",
              "DAY"
            ]
          },
          "windowSize": {
            "type": "number"
          },
          "windowSizeType": {
            "type": "string",
            "enum": [
              "YEAR",
              "MONTH",
              "DAY"
            ]
          },
          "project": {
            "$ref": "#/components/schemas/ProjectDTO"
          }
        },
        "required": [
          "id",
          "name",
          "periodicity",
          "periodicityType",
          "rotationAfter",
          "rotationAfterType",
          "windowSize",
          "windowSizeType",
          "project"
        ]
      },
      "ActivityDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "open",
              "allocated_proposed",
              "allocated_confirmed",
              "scheduled_proposed",
              "scheduled_confirmed",
              "client_confirmed",
              "cancelled"
            ],
            "description": "Current status of the activity. Possible values:\n    - cancelled: Activity has been cancelled and will not be performed\n    - open: New activity that hasn't been allocated yet\n    - allocated_proposed: Activity has been allocated to inspector(s) but not yet scheduled\n    - allocated_confirmed: Activity has been allocated to inspector(s) and scheduled\n    - scheduled_proposed: Activity has been scheduled with specific date/time\n    - scheduled_confirmed: Activity has been scheduled with specific date/time\n    - client_confirmed: Activity has been confirmed by the client"
          },
          "type": {
            "type": "string",
            "enum": [
              "Visit",
              "Desk Service"
            ]
          },
          "duration": {
            "type": "number"
          },
          "site": {
            "$ref": "#/components/schemas/SiteDTO"
          },
          "isAllocated": {
            "type": "boolean"
          },
          "allocatedInspectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InspectorDTO"
            }
          },
          "scheduledStartDate": {
            "format": "date-time",
            "type": "string",
            "description": "The earliest start date among all allocated inspectors. Calculated by finding the earliest slot.from date across all allocated inspectors in all allocated services. Returns null if there are no allocated services or no valid slots."
          },
          "competencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompetencyDTO"
            }
          },
          "standard": {
            "$ref": "#/components/schemas/StandardDTO"
          },
          "allocationId": {
            "type": "number",
            "description": "ID of the allocated service for this activity in the current solution"
          },
          "durationDays": {
            "type": "number",
            "description": "Duration of the activity in days"
          },
          "appointments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "id",
          "name",
          "status",
          "type",
          "duration"
        ]
      },
      "CreatePlanboxDto": {
        "type": "object",
        "properties": {}
      },
      "UpdatePlanboxDto": {
        "type": "object",
        "properties": {}
      },
      "CreateHolidayDto": {
        "type": "object",
        "properties": {}
      },
      "Country": {
        "type": "object",
        "properties": {}
      },
      "HolidayDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Holiday ID"
          },
          "name": {
            "type": "string",
            "description": "The name of the holiday",
            "example": "New Year"
          },
          "date": {
            "format": "date-time",
            "type": "string",
            "description": "The date of the holiday",
            "example": "2023-01-01"
          },
          "countryCode": {
            "description": "The ISO 3166-1 alpha-2 country code",
            "example": "US",
            "allOf": [
              {
                "$ref": "#/components/schemas/Country"
              }
            ]
          },
          "clientId": {
            "type": "number"
          },
          "description": {
            "type": "string",
            "description": "A description of the holiday",
            "example": "Celebration of the new year"
          },
          "regions": {
            "description": "Regions where the holiday is observed",
            "example": [
              "California",
              "New York"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "type": "string",
            "description": "The type of holiday",
            "example": "Public"
          }
        },
        "required": [
          "id",
          "name",
          "date"
        ]
      },
      "ActivityInspector": {
        "type": "object",
        "properties": {}
      },
      "GetClientActivityDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "action": {
            "type": "string"
          },
          "module": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "clientId": {
            "type": "number"
          },
          "clientName": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "action",
          "module",
          "createdAt",
          "clientId",
          "clientName"
        ]
      },
      "CreateCompetencyDto": {
        "type": "object",
        "properties": {}
      },
      "CreateServiceTypeDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateActivityTemplateDto": {
        "type": "object",
        "properties": {}
      },
      "CreateAuthorizationDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCompetencyCategoriesDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateCompetencyCategoryDto": {
        "type": "object",
        "properties": {}
      },
      "CreateUpdateStandardTemplateDto": {
        "type": "object",
        "properties": {}
      },
      "CreateStandardCategoryDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateStandardCategoryDto": {
        "type": "object",
        "properties": {}
      },
      "CreateAppointmentDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateAppointmentDto": {
        "type": "object",
        "properties": {}
      },
      "AppointmentDTO": {
        "type": "object",
        "properties": {}
      },
      "ApproveAndCreateAppointmentsDto": {
        "type": "object",
        "properties": {}
      },
      "NotifyAppointmentDto": {
        "type": "object",
        "properties": {}
      },
      "NotifyActivityDto": {
        "type": "object",
        "properties": {}
      },
      "CreateAttachmentDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCustomerDto": {
        "type": "object",
        "properties": {}
      },
      "CreateProjectDto": {
        "type": "object",
        "properties": {}
      },
      "CreateSiteDto": {
        "type": "object",
        "properties": {}
      },
      "CreatePreferrenceDTO": {
        "type": "object",
        "properties": {}
      },
      "UpdatePreferrenceDTO": {
        "type": "object",
        "properties": {}
      },
      "CreateRecurringScheduleDto": {
        "type": "object",
        "properties": {}
      },
      "CreateCategoryDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateCategoryDto": {
        "type": "object",
        "properties": {}
      },
      "CreateSolutionDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateSolutionDto": {
        "type": "object",
        "properties": {}
      },
      "UpdateAllocatedService": {
        "type": "object",
        "properties": {}
      },
      "CreateRegionDto": {
        "type": "object",
        "properties": {}
      },
      "CreateMemberRoleDto": {
        "type": "object",
        "properties": {}
      },
      "CreateClientTypeDto": {
        "type": "object",
        "properties": {}
      },
      "FileImport": {
        "type": "object",
        "properties": {}
      },
      "FileImportStatusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "The ID of the file import",
            "example": 1
          },
          "status": {
            "type": "string",
            "description": "The status of the file import",
            "enum": [
              "IN_PROGRESS",
              "COMPLETED",
              "FAILED"
            ],
            "example": "IN_PROGRESS"
          },
          "progress": {
            "type": "number",
            "description": "The progress percentage of the file import",
            "example": 50
          },
          "processedRows": {
            "type": "number",
            "description": "The number of processed rows",
            "example": 100
          },
          "totalRows": {
            "type": "number",
            "description": "The total number of rows",
            "example": 200
          },
          "error": {
            "type": "string",
            "description": "Error message if any",
            "example": "Error in row 10: Invalid email"
          }
        },
        "required": [
          "id",
          "status",
          "progress",
          "processedRows",
          "totalRows"
        ]
      }
    }
  },
  "security": [
    {
      "access-token": []
    }
  ]
}